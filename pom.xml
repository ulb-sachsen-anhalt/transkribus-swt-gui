<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>eu.transkribus</groupId>
	<artifactId>TranskribusSwtGui</artifactId>
	<packaging>jar</packaging>
	<version>1.20.1</version>
	<name>Transkribus</name>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<program-name>Transkribus Expert Client</program-name>
		<mainClassName>eu.transkribus.swt_gui.TrpGui</mainClassName>
		<dependency-dir>libs</dependency-dir>
		<win-jre>openlogic-openjdk-jre-11.0.16+8-windows-x64</win-jre>
		<maven.build.timestamp.format>dd_MM_yyyy_HH:mm</maven.build.timestamp.format>
		<timestamp>${maven.build.timestamp}</timestamp>
		<swt.groupId>org.eclipse.swt</swt.groupId>
		<launch4j-maven.version>2.1.1</launch4j-maven.version>
		<swt.version>4.17</swt.version>
		<swt-lib-name>swt-${swt.version}.jar</swt-lib-name>
		<client.version>0.3.19</client.version>
	</properties>

	<distributionManagement>
		<site>
			<id>website</id>
			<name>transkribus.eu</name>
			<url>scp://read01.uibk.ac.at/var/www/html/TranskribusSwtGui</url>
		</site>
	</distributionManagement>

	<build>
		<finalName>${project.name}-${project.version}</finalName>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<filters>
			<filter>src/main/resources/info.properties</filter>
		</filters>
		<extensions>
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ftp</artifactId>
				<version>2.10</version>
			</extension>
		</extensions>
		<plugins>
			<!-- to execute the main class from console using mvn exec:java ... -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.5.0</version>
				<executions>
					<execution>
						<goals>
							<goal>java</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<mainClass>${mainClassName}</mainClass>
					<arguments>
						<argument>-classpath</argument>
					</arguments>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.10.1</version>
				<configuration>
					<release>11</release>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<!-- Including examples package costs about 0.1 MB, so dont risk anything here... -->
					<excludes>
						<exclude>examples/**</exclude>
					</excludes>
					<archive>
						<addMavenDescriptor>false</addMavenDescriptor>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathPrefix>${dependency-dir}/</classpathPrefix>
							<mainClass>${mainClassName}</mainClass>
						</manifest>
						<!-- Wildcards do not work in manifest.mf ... -->
						<manifestEntries>
							<Class-Path>${dependency-dir}/${swt-lib-name}</Class-Path>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>

			<!-- Copy jars to dedicated lib in target folder: -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.5.1</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<excludeArtifactIds>${swt.artifactId}</excludeArtifactIds>
							<outputDirectory>${project.build.directory}/${dependency-dir}/</outputDirectory>
						</configuration>
					</execution>

					<!-- unpack jre dependency -->
					<execution>
						<id>unpack-sigar</id>
						<phase>package</phase>
						<goals>
							<goal>unpack-dependencies</goal>
						</goals>
						<configuration>
							<excludeTransitive>true</excludeTransitive>
							<includeGroupIds>oracle</includeGroupIds>
							<includeArtifactIds>jre</includeArtifactIds>
							<includeScope>provided</includeScope>
							<outputDirectory>${project.build.directory}/jre</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Copy some files to output directory (config file ...) -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.5</version>
				<executions>
					<execution>
						<id>swt-libs</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}${file.separator}${dependency-dir}/</outputDirectory>
							<resources>
								<resource>
									<directory>.${file.separator}swt${file.separator}</directory>
									<includes>
										<include>swt-${swt.version}-linux64.jar</include>
										<include>swt-${swt.version}-win64.jar</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- LAUNCH4J PLUGIN TO CREATE WINDOWS EXE FILE -->
			<plugin>
				<groupId>com.akathist.maven.plugins.launch4j</groupId>
				<artifactId>launch4j-maven-plugin</artifactId>
				<version>${launch4j-maven.version}</version>
				<executions>
					<execution>
						<id>l4j-clui</id>
						<phase>package</phase>
						<goals>
							<goal>launch4j</goal>
						</goals>
						<configuration>
							<dontWrapJar>true</dontWrapJar>
							<headerType>gui</headerType>
							<jar>${project.build.finalName}.jar</jar>
							<outfile>${project.build.directory}/${project.name}.exe</outfile>
							<classPath>
								<mainClass>${mainClassName}</mainClass>
								<preCp>anything</preCp>
							</classPath>
							<icon>src/main/resources/icons/ticon6.ico</icon>
							<jre>
								<path>%JAVA_HOME%;%PATH%</path>
								<initialHeapSize>4096</initialHeapSize>
								<maxHeapSize>8092</maxHeapSize>
								<bundledJre64Bit>true</bundledJre64Bit>
								<bundledJreAsFallback>true</bundledJreAsFallback>
								<minVersion>1.11.0</minVersion>
								<jdkPreference>preferJdk</jdkPreference>
								<opts>
									<opt>-Dfile.encoding=UTF-8</opt>
								</opts>
							</jre>
							<messages>
								<jreVersionErr>Transkribus requires a JDK version >= 11. Please download and install from https://www.oracle.com/java/technologies/downloads/. For more information visit https://readcoop.eu/transkribus/howto/how-to-download-install-and-run-transkribus/</jreVersionErr>
							</messages>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Skip the default deployment: -->
			<plugin>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.8.2</version>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>

			<!-- Antrun plugin - do some stuff with ant attached to different phases -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<!--  Unzip jre to target dir (for packaging with assembly plugin!) -->
					<!--  use 'mvn antrun:run@unzip_jre' to run independently from console! -->
					<execution>
						<id>unzip_jre</id>
						<phase>deploy</phase>
						<configuration>
							<tasks>
								<echo message="unzipping jre's into target dir" />
								<echo message="unpacking jdk's into target dir" />
								<unzip src="jre/${win-jre}.zip" dest="${project.build.directory}/${win-jre}" />
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>

					<!-- Change user permissions for startup scripts (because they are lost 
						after copy-dependencies!!) -->
					<!--  use 'mvn antrun:run@change_permissions_for_scripts' to run independently from console! -->
					<execution>
						<id>change_permissions_for_scripts</id>
						<phase>package</phase>
						<configuration>
							<target>
								<!-- Needed? Permissions also changed in assembly! Nevermind, it won't hurt... -->
								<chmod file="${project.build.directory}/Transkribus.sh" perm="755" />
								<chmod file="${project.build.directory}/Transkribus.command" perm="755" />
								<chmod file="${project.build.directory}/Transkribus" perm="755" />
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>

					<!-- Upload assembly zip to wherever needed -->
					<!-- 'mvn deploy' will install the package and upload the stuff -->
					<!-- 'mvn antrun:run' will only try to upload an existing zip file -->
					<execution>
						<id>default-cli</id>
						<configuration>
							<target>
								<taskdef resource="net/sf/antcontrib/antlib.xml" classpathref="maven.plugin.classpath" />
								<if>
									<matches pattern=".*-SNAPSHOT.*" string="${project.version}" />
									<then>
										<property name="deploySubDir" value="/snapshots/"/>
										<echo>This is a snapshot build - subdir = ${deploySubDir}</echo>
									</then>
									<else>
										<property name="deploySubDir" value="/releases/"/>
										<echo>This is a release build - subdir = ${deploySubDir}</echo>
									</else>
								</if>
								<property name="deployDir" value="${env.HOME}/Transkribus" />
								<for list="${deployDir}" param="dir">
									<sequential>
										<echo>Trying to deploy zip's to @{dir}${deploySubDir}</echo>
										<!-- Deploy default package - NOTE: do *not* add any other zip files here, as the updater won't work anymore! -->
										<if>
											<available file="@{dir}${deploySubDir}" type="dir" />
											<then>
												<echo message="Directory @{dir}${deploySubDir} exists - now copying zip file to it" />
												<copy todir="@{dir}${deploySubDir}">
													<fileset dir="${project.build.directory}">
														<include name="${project.build.finalName}-package.zip" />
													</fileset>
												</copy>
											</then>
											<else>
												<echo message="Directory @{dir}${deploySubDir} does not exist - skipping" />
											</else>
										</if>

										<!-- Deploy win64 package -->
										<if>
											<available file="@{dir}${deploySubDir}/win64" type="dir" />
											<then>
												<echo message="Directory @{dir}${deploySubDir}/win64 exists - now copying win64 zip file to it" />
												<copy todir="@{dir}${deploySubDir}/win64">
													<fileset dir="${project.build.directory}">
														<include name="${project.build.finalName}-win64.zip" />
													</fileset>
												</copy>
											</then>
											<else>
												<echo message="Directory @{dir}${deploySubDir}/win64 does not exist - skipping" />
											</else>
										</if>
									</sequential>
								</for>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>ant</groupId>
						<artifactId>ant-jsch</artifactId>
						<version>1.6.5</version>
					</dependency>
					<dependency>
						<groupId>com.jcraft</groupId>
						<artifactId>jsch</artifactId>
						<version>0.1.55</version>
					</dependency>
					<dependency>
						<groupId>ant</groupId>
						<artifactId>ant-commons-net</artifactId>
						<version>1.6.5</version>
					</dependency>
					<dependency>
						<groupId>org.apache.ant</groupId>
						<artifactId>ant-nodeps</artifactId>
						<version>1.8.1</version>
					</dependency>
					<dependency>
						<groupId>commons-net</groupId>
						<artifactId>commons-net</artifactId>
						<version>3.3</version>
					</dependency>
					<dependency>
						<groupId>ant-contrib</groupId>
						<artifactId>ant-contrib</artifactId>
						<version>1.0b3</version>
						<exclusions>							<!-- DO NOT REMOVE THIS EXCLUSION! -->
							<exclusion>
								<artifactId>ant</artifactId>
								<groupId>ant</groupId>
							</exclusion>
						</exclusions>
					</dependency>
				</dependencies>
			</plugin>

			<!-- To run assembly individually from console: mvn assembly:single -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>3.0.0</version>
				<configuration>
					<descriptors>
						<descriptor>src/assembly/dep.xml</descriptor>
						<descriptor>src/assembly/dep_win64.xml</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id>						<!-- this is used for inheritance merges -->
						<phase>deploy</phase>
						<goals>
							<goal>single</goal>							<!-- goals == mojos -->
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.10.3</version>
				<configuration>
					<additionalparam>-Xdoclint:none</additionalparam>
					<show>private</show>
					<nohelp>true</nohelp>
				</configuration>
			</plugin>
		</plugins>

		<!-- M2E Lifecycle mapping bug workaround, see http://wiki.eclipse.org/M2E_plugin_execution_not_covered -->
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.6</version>
				</plugin>

				<!-- Ignore/Execute plugin execution -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<!-- anrtun plugin -->
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-antrun-plugin</artifactId>
										<versionRange>1.7</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute>
											<runOnIncremental>false</runOnIncremental>
										</execute>
									</action>
								</pluginExecution>

								<!-- copy-dependency plugin -->
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[1.0.0,)</versionRange>
										<goals>
											<goal>copy-dependencies</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute>
											<runOnIncremental>false</runOnIncremental>
										</execute>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>3.5.1</version>
					<dependencies>
						<dependency>							<!-- add support for ssh/scp -->
							<groupId>org.apache.maven.wagon</groupId>
							<artifactId>wagon-ssh</artifactId>
							<version>1.0</version>
						</dependency>
					</dependencies>
				</plugin>
			</plugins>
		</pluginManagement>

	</build>
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.10.3</version>
				<configuration>
					<show>public</show>
					<additionalparam>-Xdoclint:none</additionalparam>
				</configuration>
			</plugin>
		</plugins>
	</reporting>
	<dependencies>
		<!-- TRP dependencies: -->
		<dependency>
			<groupId>eu.transkribus</groupId>
			<artifactId>TranskribusClient</artifactId>
			<version>${client.version}</version>
			<exclusions>
				<exclusion>
					<groupId>xml-apis</groupId>
					<artifactId>xml-apis</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.apache.xmlgraphics</groupId>
					<artifactId>batik-ext</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.apache.xmlgraphics</groupId>
					<artifactId>batik-extension</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.xml.bind</groupId>
					<artifactId>jsr173_api</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.xml.bind</groupId>
					<artifactId>jaxb-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- SWT dependencies: -->
		<!-- SWT dependency (replaces project reference!) -->
		<!-- NOTE: swt.artifactId should be defined in a profile below or in $USER_HOME/.m2/settings.xml -->
		<dependency>
			<groupId>${swt.groupId}</groupId>
			<artifactId>${swt.artifactId}</artifactId>
			<version>${swt.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse</groupId>
			<artifactId>jface</artifactId>
			<version>3.19.0.v20200218</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.core</groupId>
			<artifactId>commands</artifactId>
			<version>3.9.700.v20191217</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.ui</groupId>
			<artifactId>workbench</artifactId>
			<version>3.119.0.v20200521</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.ui</groupId>
			<artifactId>forms</artifactId>
			<version>3.9.100.v20200413</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jface</groupId>
			<artifactId>databinding</artifactId>
			<version>1.11.100.v20200522</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.core</groupId>
			<artifactId>databinding</artifactId>
			<version>1.9.0.v20200519</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.core.databinding</groupId>
			<artifactId>beans</artifactId>
			<version>1.6.100.v20191217</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.core.databinding</groupId>
			<artifactId>observable</artifactId>
			<version>1.9.0.v20200205</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.core.databinding</groupId>
			<artifactId>property</artifactId>
			<version>1.8.0.v20200124</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jface</groupId>
			<artifactId>text</artifactId>
			<version>3.16.300.v20200526</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse</groupId>
			<artifactId>text</artifactId>
			<version>3.10.200.v20200428</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.nebula.widgets</groupId>
			<artifactId>tablecombo</artifactId>
			<version>1.2.0.202009071539</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.nebula.widgets</groupId>
			<artifactId>gallery</artifactId>
			<version>1.0.0</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.nebula.widgets</groupId>
			<artifactId>pagination</artifactId>
			<version>1.0.0.201609281642</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.nebula.widgets</groupId>
			<artifactId>pagination</artifactId>
			<version>1.0.0.201609281642</version>
			<classifier>sources</classifier>
			<scope>compile</scope>
		</dependency>
		<!-- primaresearch page io libs -->
		<dependency>
			<groupId>org.primaresearch</groupId>
			<artifactId>PrimaBasic</artifactId>
			<version>1.5.01-trp</version>
		</dependency>
		<dependency>
			<groupId>org.primaresearch</groupId>
			<artifactId>PrimaDla</artifactId>
			<version>1.5.01-trp</version>
		</dependency>
		<dependency>
			<groupId>org.primaresearch</groupId>
			<artifactId>PrimaIo</artifactId>
			<version>1.5.01-trp</version>
		</dependency>
		<dependency>
			<groupId>org.primaresearch</groupId>
			<artifactId>PrimaMaths</artifactId>
			<version>1.5.01-trp</version>
		</dependency>
		<!-- Other: -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.1</version>
		</dependency>
		<dependency>
			<groupId>org.jdom</groupId>
			<artifactId>jdom2</artifactId>
			<version>2.0.6</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>jaxen</groupId>
			<artifactId>jaxen</artifactId>
			<version>1.2.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.11.0</version>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.6</version>
		</dependency>
		<dependency>
			<groupId>commons-configuration</groupId>
			<artifactId>commons-configuration</artifactId>
			<version>1.10</version>
		</dependency>
		<dependency>
			<groupId>math.geom2d</groupId>
			<artifactId>javaGeom</artifactId>
			<version>0.11.1</version>
		</dependency>
		<dependency>
			<groupId>net.lingala.zip4j</groupId>
			<artifactId>zip4j</artifactId>
			<version>1.3.3</version>
		</dependency>
		<dependency>
			<groupId>net.sf.opencsv</groupId>
			<artifactId>opencsv</artifactId>
			<version>2.3</version>
		</dependency>
		<dependency>
			<groupId>com.jmatio</groupId>
			<artifactId>jmatio</artifactId>
			<version>041212</version>
		</dependency>
		<dependency>
			<groupId>com.googlecode.java-diff-utils</groupId>
			<artifactId>diffutils</artifactId>
			<version>1.3.0</version>
		</dependency>
		<dependency>
			<groupId>com.j2bugzilla</groupId>
			<artifactId>j2bugzilla</artifactId>
			<version>2.2.1</version>
			<exclusions>
				<exclusion>
					<groupId>xml-apis</groupId>
					<artifactId>xml-apis</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>opal</groupId>
			<artifactId>opal</artifactId>
			<version>1.0.1</version>
		</dependency>
		<dependency>
			<groupId>com.mkobos</groupId>
			<artifactId>pca_transform</artifactId>
			<version>1.0.2</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.nebula.widgets</groupId>
			<artifactId>datechooser</artifactId>
			<version>1.0.0.201609281642</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.nebula.widgets</groupId>
			<artifactId>formattedtext</artifactId>
			<version>1.0.0.201609281642</version>
		</dependency>
		<dependency>
			<groupId>org.jfree</groupId>
			<artifactId>jfreechart-swt</artifactId>
			<version>1.0</version>
			<exclusions>
				<exclusion>
					<groupId>org.eclipse.swt</groupId>
					<artifactId>org.eclipse.swt.cocoa.macosx.x86_64</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>

	<repositories>
		<repository>
			<id>transkribus-artifactory</id>
			<name>transkribus-artifactory-releases</name>
			<url>https://transkribus.eu/artifactory/libs-release/</url>
		</repository>
		<repository>
			<id>maven2-repository.dev.java.net</id>
			<name>Java.net Repository for Maven</name>
			<url>https://download.java.net/maven/2/</url>
			<layout>default</layout>
		</repository>
		<repository>
			<id>swt-repo</id>
			<url>https://maven-eclipse.github.io/maven</url>
		</repository>
		<repository>
			<id>central</id>
			<name>Central Repository</name>
			<url>https://repo.maven.apache.org/maven2</url>
			<layout>default</layout>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

	<!-- Define profiles for different OS and architectures: -->
	<profiles>
		<!-- linux 64 bit profile -->
		<profile>
			<id>linux64</id>
			<activation>
				<os>
					<family>linux</family>
					<arch>amd64</arch>
				</os>
			</activation>
			<properties>
				<swt.artifactId>org.eclipse.swt.gtk.linux.x86_64</swt.artifactId>
			</properties>
		</profile>
		<!-- windows 64 bit profile -->
		<profile>
			<id>windows64</id>
			<activation>
				<os>
					<family>Windows</family>
					<arch>amd64</arch>
				</os>
			</activation>
			<properties>
				<swt.artifactId>org.eclipse.swt.win32.win32.x86_64</swt.artifactId>
			</properties>
		</profile>
		<!-- Profile for codesigning the final .exe and .jar files -->
		<!-- To activate the profile, set the codesign variable, e.g. 'mvn clean install -Dcodesign' -->
		<!-- To run the ant task in this profile independently: 'mvn antrun:run@codesign -Dcodesign' -->
		<profile>
			<id>codesign</id>
			<activation>
				<property>
					<name>codesign</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-jarsigner-plugin</artifactId>
						<version>3.0.0</version>
						<executions>
							<execution>
								<id>sign</id>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<keystore>NONE</keystore>
							<alias>Certificate for PIV Authentication</alias>
							<storetype>PKCS11</storetype>
							<providerClass>sun.security.pkcs11.SunPKCS11</providerClass>
							<providerArg>X:/TRP/config/code_signing_certificate/yubikey-pkcs11-java.cfg</providerArg>
							<archive>${project.build.directory}/${project.build.finalName}.jar</archive>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>3.0.0</version>
						<executions>
							<execution>
								<id>codesign</id>
								<phase>package</phase>
								<configuration>
									<target>
										<taskdef resource="net/sf/antcontrib/antlib.xml" classpathref="maven.plugin.classpath"/>
										<loadfile srcfile="X:/TRP/config/code_signing_certificate/codesignpw.txt" property="codesignpw"/>
										<!-- Signing Transkribus.exe -->
										<if>
											<equals arg1="true" arg2="true"/>
											<then>
												<echo message="Codesigning ${project.name}.exe..."/>
												<exec dir="${project.build.directory}" executable="signtool">
													<arg line="sign /sha1 4cdcb0221580009fae8365a74cb0b96353e6e3db /fd sha256 /a /tr http://ts.ssl.com /td sha256 ${project.name}.exe"/>
												</exec>
											</then>
										</if>
										<!-- Signing final jar -->
										<if>
											<equals arg1="true" arg2="false"/>
											<then>
												<echo message="Codesigning ${project.build.finalName}.jar..."/>
												<exec dir="target" executable="jarsigner" spawn="false" failonerror="true">
													<arg line='-tsa http://ts.ssl.com -providerClass sun.security.pkcs11.SunPKCS11 -providerArg X:/TRP/config/code_signing_certificate/yubikey-pkcs11-java.cfg -keystore NONE -storetype PKCS11 ${project.build.finalName}.jar "Certificate for PIV Authentication"'/>
												</exec>
											</then>
										</if>
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
